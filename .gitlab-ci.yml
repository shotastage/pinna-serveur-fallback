# Build Stages
stages:
  - Validation
  - Django
  - Front Test
  - Build
  - Deploy


ubuntu:python:
  image: ubuntu:16.04
  stage: Validation
  when: manual

  before_script:
    - apt-get update
    - apt-get install -y curl build-essential git gcc make openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev
    - apt-get install -y python3-tk tk-dev python-tk libfreetype6-dev 
    - git clone https://github.com/yyuu/pyenv.git ~/.pyenv
    - export PYENV_ROOT=$HOME/.pyenv
    - export PATH=$PYENV_ROOT/bin:$PATH
    - eval "$(pyenv init -)"
    - pyenv --version
    - pyenv install --list
    
  script:
    - pyenv install 3.6.4
  
  tags:
    - common



# Django Test on Python 3.6
python:3.6:
  image: python:3.6.4
  services:
  - name: postgres:latest
    alias: PS_1
  - name: postgres:latest
    alias: PS_2


  variables:
    PS_1_DB: pinna_gitlab_ci
    PS_1_USER: gitlab_ci
    PS_1_PASSWORD: "test_passwd_for_ci"
    PS_1_HOST: "postgres"

    PS_2_DB: pinna_gitlab_ci_testing
    PS_2_USER: gitlab_ci
    PS_2_PASSWORD: "test_passwd_for_ci"
    PS_2_HOST: "postgres"

  stage: Django
  before_script:
    - pip install --upgrade pip
    - pip install -r ./requirements/locked.txt
    - pip install django-mirage

  script:
    - python --version
    - mg v
    - cd ./PINNA
    - cd ./PINNA
    - rm -f test.sqlite3
    - rm -f db.sqlite3
    - cd ..
    # - mg db:migrate
    - python manage.py migrate
    - python manage.py test

  tags:
    - django

  except:
    - features/doc
    - features/artworks
    - features/config
    - features/editor_utils
    - features/tools
    - features/gitlab



# Django Test on Python 3.7
python:3.7:
  image: python:3.7.0b1-stretch
  when: manual
  services:
  - name: postgres:latest
    alias: PS_1
  - name: postgres:latest
    alias: PS_2


  variables:
    PS_1_DB: pinna_gitlab_ci
    PS_1_USER: gitlab_ci
    PS_1_PASSWORD: "test_passwd_for_ci"
    PS_1_HOST: "postgres"

    PS_2_DB: pinna_gitlab_ci_testing
    PS_2_USER: gitlab_ci
    PS_2_PASSWORD: "test_passwd_for_ci"
    PS_2_HOST: "postgres"

  stage: Django
  before_script:
    - pip install --upgrade pip
    - pip install -r ./requirements/locked.txt
    - pip install django-mirage

  script:
    - python --version
    - mg v
    - cd ./PINNA
    - cd ./PINNA
    - rm -f test.sqlite3
    - rm -f db.sqlite3
    - cd ..
    # - mg db:migrate
    - python manage.py migrate
    - python manage.py test

  tags:
    - django

  except:
    - features/doc
    - features/artworks
    - features/config
    - features/editor_utils
    - features/tools
    - features/gitlab

  allow_failure: true


jest:9.7.1:
  image: node:9.7.1
  stage: Front Test

  before_script:
    - npm install -g yarn

  script:
    - cd shell
    - yarn install
    - yarn run build
  
  tags:
    - node




jest:8.9.4:
  image: node:8.9.4
  stage: Front Test
  when: manual

  before_script:
    - npm install -g yarn

  script:
    - cd shell
    - yarn install
    - yarn run build
  
  tags:
    - node

  allow_failure: true





build:deb:
  image: ubuntu:16.04
  stage: Build

  before_script:
    - echo "Skip"
    
  script:
    - echo "Skip"
  
  tags:
    - common


build:container:
  image: ubuntu:16.04
  stage: Build

  before_script:
    - echo "Skip"
    
  script:
    - echo "Skip"
  
  tags:
    - common




deploy:kubernetes:
  image: ubuntu:16.04
  stage: Deploy

  before_script:
    - echo "Skip"
    
  script:
    - echo "Skip"
  
  tags:
    - common
